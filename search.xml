<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/01/14/hello-world-2/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<span id="more"></span>]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title>整合七牛云</title>
    <url>/2023/01/14/hello-world/</url>
    <content><![CDATA[<blockquote>
<p><strong>引入七牛云依赖</strong></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.qiniu&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;qiniu-java-sdk&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;[7.7.0, 7.10.99]&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意点</p>
</blockquote>
<p><strong>从 7.2.24 开始，okhttp3 升级到 3.14.2，其要求 java 1.8 及以上。<br>若一定 java 1.7 ，请手动指定 okhttp3 依赖 3.12，要求 3.12.3 及以上， com.squareup.okhttp3:okhttp:3.12.3</strong></p>
<h4 id="创建七牛云工具类"><a href="#创建七牛云工具类" class="headerlink" title="创建七牛云工具类"></a>创建七牛云工具类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.http.Response;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.Configuration;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.Region;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.UploadManager;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.storage.model.DefaultPutRet;</span><br><span class="line"><span class="keyword">import</span> com.qiniu.util.Auth;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QiniuUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改以下两个值放到proprietarties中，在密钥管理中获取</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;qiniu.accessKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;qiniu.accessSecretKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessSecretKey;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改上传名称为自己创立空间的空间名称</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;qiniu.bucket&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucket;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 前端传过来的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 你要存储的名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">upload</span> <span class="params">(MultipartFile file, String fileName)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造一个带指定 Region 对象的配置类   实例化时后面跟的是你仓库的位置  华南还是华北等等</span></span><br><span class="line">        <span class="type">Configuration</span> <span class="variable">cfg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Configuration</span>(Region.huanan());</span><br><span class="line">        <span class="comment">//...其他参数参考类注释</span></span><br><span class="line">        <span class="type">UploadManager</span> <span class="variable">uploadManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadManager</span>(cfg);</span><br><span class="line">        <span class="comment">//...生成上传凭证，然后准备上传，</span></span><br><span class="line">        <span class="comment">//默认不指定key的情况下，以文件内容的hash值作为文件名</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">byte</span>[] uploadBytes = file.getBytes();</span><br><span class="line">            <span class="type">Auth</span> <span class="variable">auth</span> <span class="operator">=</span> Auth.create(accessKey, accessSecretKey);</span><br><span class="line">            <span class="type">String</span> <span class="variable">upToken</span> <span class="operator">=</span> auth.uploadToken(bucket);</span><br><span class="line">            <span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> uploadManager.put(uploadBytes, fileName, upToken);</span><br><span class="line">            <span class="comment">//解析上传成功的结果</span></span><br><span class="line">            <span class="type">DefaultPutRet</span> <span class="variable">putRet</span> <span class="operator">=</span> JSON.parseObject(response.bodyString(), DefaultPutRet.class);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>需要调用upload方法即可。</p>
]]></content>
      <tags>
        <tag>springboot</tag>
      </tags>
  </entry>
</search>
